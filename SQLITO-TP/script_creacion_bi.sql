USE GD2C2023;
GO

-- Eliminar Procedimientos Almacenados
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_HECHOS_ANUNCIOS' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_HECHOS_ANUNCIOS;
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_HECHOS_ALQUILER' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_HECHOS_ALQUILER;
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_AMBIENTES' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_AMBIENTES;
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_TIEMPO_PUBLICACION' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_TIEMPO_PUBLICACION;
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_TIEMPO_FINALIZACION' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_TIEMPO_FINALIZACION;
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_TIPO_MONEDA' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_TIPO_MONEDA;
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_TIPO_OPERACION' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_TIPO_OPERACION;
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_AGENCIA' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_AGENCIA;
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_BARRIO' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_BARRIO;
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_LOCALIDAD' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_LOCALIDAD;
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_PROVINCIA' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_PROVINCIA;
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_RANGO_ETARIO' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_RANGO_ETARIO;
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_RANGO_METROS' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_RANGO_METROS;
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'BI_MIGRAR_TIPO_INMUEBLE' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP PROCEDURE [SQLITO].BI_MIGRAR_TIPO_INMUEBLE;

-- Eliminar Funciones
IF EXISTS (SELECT * FROM sys.objects WHERE type IN ('FN', 'IF', 'TF') AND name = 'CALCULAR_RANGO_ETARIO_EMPLEADO' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP FUNCTION [SQLITO].CALCULAR_RANGO_ETARIO_EMPLEADO;
GO
IF EXISTS (SELECT * FROM sys.objects WHERE type IN ('FN', 'IF', 'TF') AND name = 'CALCULAR_RANGO_ETARIO_INQUILINO' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP FUNCTION [SQLITO].CALCULAR_RANGO_ETARIO_INQUILINO;
GO
IF EXISTS (SELECT * FROM sys.objects WHERE type IN ('FN', 'IF', 'TF') AND name = 'CALCULAR_RANGO_METROS' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP FUNCTION [SQLITO].CALCULAR_RANGO_METROS;
GO

-- Eliminar Tablas


IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_HECHOS_ANUNCIO' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_HECHOS_ANUNCIO;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_HECHOS_ALQUILER' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_HECHOS_ALQUILER;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_HECHOS_VENTA' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_HECHOS_VENTA;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_AGENTE' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_AGENTE;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_INQUILINO' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_INQUILINO;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_INMUEBLE' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_INMUEBLE;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_BARRIO' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_BARRIO;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_LOCALIDAD' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_LOCALIDAD;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_PROVINCIA' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_PROVINCIA;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_AGENCIA' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_AGENCIA;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_TIPO_MONEDA' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_TIPO_MONEDA;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_TIPO_OPERACION' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_TIPO_OPERACION;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_RANGO_METROS' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_RANGO_METROS;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_AMBIENTES' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_AMBIENTES;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_TIPO_INMUEBLE' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_TIPO_INMUEBLE;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_RANGO_ETARIO' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_RANGO_ETARIO;
IF EXISTS (SELECT * FROM sys.tables WHERE name = 'BI_TIEMPO' AND schema_id = SCHEMA_ID('SQLITO'))
    DROP TABLE [SQLITO].BI_TIEMPO;

-- Eliminar Esquema
/*IF EXISTS (SELECT 1 FROM sys.schemas WHERE name = 'SQLITO')
BEGIN
    DROP SCHEMA SQLITO;
END; */

--------------------------
--Creacion tablas--
--------------------------

/*IF NOT EXISTS (SELECT schema_name FROM information_schema.schemata WHERE schema_name = 'SQLITO')
BEGIN
    EXEC('CREATE SCHEMA SQLITO')
END
GO */

CREATE TABLE [SQLITO].BI_TIEMPO(
	BI_TIEMPO_ID NUMERIC(18,0) IDENTITY(1, 1) PRIMARY KEY,
	BI_TIEMPO_ANIO INT,
	BI_TIEMPO_CUATRIMESTRE INT,
	BI_TIEMPO_MES INT
);
GO

CREATE TABLE [SQLITO].BI_RANGO_ETARIO(
	BI_RANGO_ETARIO_ID NUMERIC(18,0) IDENTITY(1, 1) PRIMARY KEY,
	BI_RANGO_ETARIO_RANGO nvarchar(10),
);
GO

CREATE TABLE [SQLITO].BI_TIPO_INMUEBLE(
	BI_TIPO_INMUEBLE_ID NUMERIC(18,0) IDENTITY PRIMARY KEY,
	BI_TIPO_INMUEBLE nvarchar(45)
);
GO

CREATE TABLE [SQLITO].BI_AMBIENTES(
	BI_AMBIENTES_ID NUMERIC(18,0) IDENTITY(1,1) PRIMARY KEY,
	BI_AMBIENTES_CANTIDAD nvarchar(100)
);
GO

CREATE TABLE [SQLITO].BI_RANGO_METROS(
	BI_RANGO_METROS_ID NUMERIC(18,0) IDENTITY(1, 1) PRIMARY KEY,
	BI_RANGO_METROS_DESCRIPCION nvarchar(50)
);
GO

CREATE TABLE [SQLITO].BI_TIPO_OPERACION(
	BI_TIPO_OPERACION_ID NUMERIC(18,0) IDENTITY PRIMARY KEY,
	BI_TIPO_OPERACION_DESCRIPCION nvarchar(100)
);
GO

CREATE TABLE [SQLITO].BI_TIPO_MONEDA(
	BI_TIPO_MONEDA_ID NUMERIC(18,0) IDENTITY PRIMARY KEY,
	BI_TIPO_MONEDA nvarchar(100)
);
GO

CREATE TABLE [SQLITO].BI_AGENCIA(
	BI_AGENCIA_ID NUMERIC(18,0) IDENTITY PRIMARY KEY,
	BI_AGENCIA_NOMBRE nvarchar(100)
);
GO

CREATE TABLE [SQLITO].BI_PROVINCIA(
	BI_PROVINCIA_ID NUMERIC(18,0) PRIMARY KEY,
	BI_PROVINCIA_NOMBRE nvarchar(100)
);
GO

CREATE TABLE [SQLITO].BI_LOCALIDAD(
	BI_LOCALIDAD_ID NUMERIC(18,0) PRIMARY KEY,
	BI_LOCALIDAD_NOMBRE NVARCHAR(100),
	BI_PROVINCIA_ID NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_PROVINCIA] ([BI_PROVINCIA_ID])
);
GO

CREATE TABLE [SQLITO].BI_BARRIO(
	BI_BARRIO_ID NUMERIC(18,0) PRIMARY KEY,
	BI_BARRIO_NOMBRE VARCHAR(100),
	BI_LOCALIDAD_ID NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_LOCALIDAD] ([BI_LOCALIDAD_ID])
);
GO

--------------------------
--Creacion tablas hechos--
--------------------------

CREATE TABLE [SQLITO].BI_HECHOS_ANUNCIO(
	BI_tiempo NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_TIEMPO] ([BI_TIEMPO_ID]),
	BI_tipo_operacion NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_TIPO_OPERACION] ([BI_TIPO_OPERACION_ID]),
	BI_barrio NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_BARRIO] ([BI_BARRIO_ID]),
	BI_ambientes NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_AMBIENTES] ([BI_AMBIENTES_ID]),
	BI_tipo_inmueble NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_TIPO_INMUEBLE] ([BI_TIPO_INMUEBLE_ID]),
	BI_rango_metros NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_RANGO_METROS] ([BI_RANGO_METROS_ID]),
	BI_tipo_moneda NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_TIPO_MONEDA] ([BI_TIPO_MONEDA_ID]),
	BI_agencia NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_AGENCIA] ([BI_AGENCIA_ID]),
	BI_rango_etario_empleado NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_RANGO_ETARIO] ([BI_RANGO_ETARIO_ID]),
	BI_anuncio_fecha_publicacion datetime,
	BI_anuncio_fecha_finalizacion datetime,
	BI_anuncio_precio_publicado numeric(18, 2)
	PRIMARY KEY (BI_tiempo, BI_tipo_operacion, BI_barrio, BI_ambientes, BI_tipo_inmueble, BI_rango_metros, BI_tipo_moneda, BI_agencia, BI_rango_etario_empleado)
);
GO

CREATE TABLE [SQLITO].BI_HECHOS_ALQUILER(
	BI_rango_etario_inquilino NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_RANGO_ETARIO] ([BI_RANGO_ETARIO_ID]),
	BI_tiempo NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_TIEMPO] ([BI_TIEMPO_ID]),
	BI_barrio NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_BARRIO] ([BI_BARRIO_ID]),
	BI_pago_alq_fecha datetime,
	BI_pago_alq_fecha_vencimiento datetime,
	BI_pago_alq_importe numeric(18, 2),
	BI_alq_comision numeric(18, 2),
	PRIMARY KEY (BI_rango_etario_inquilino, BI_tiempo, BI_barrio)
);
GO

CREATE TABLE [SQLITO].BI_HECHOS_VENTA(
	BI_tiempo NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_TIEMPO] ([BI_TIEMPO_ID]),
	BI_tipo_inmueble NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_TIPO_INMUEBLE] ([BI_TIPO_INMUEBLE_ID]),
	BI_localidad NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_LOCALIDAD] ([BI_LOCALIDAD_ID]),
	BI_agencia NUMERIC(18,0) NOT NULL FOREIGN KEY REFERENCES [SQLITO].[BI_AGENCIA] ([BI_AGENCIA_ID]),
	BI_venta_precio numeric(18,2),
	BI_superficie_total numeric(18, 2),
	BI_venta_comision numeric(18, 2),
	PRIMARY KEY (BI_tiempo, BI_tipo_inmueble, BI_localidad, BI_agencia)
);
GO

CREATE FUNCTION [SQLITO].CALCULAR_RANGO_ETARIO_EMPLEADO(@EMPLEADO NUMERIC(18,0))
RETURNS INT
BEGIN
	DECLARE @FECHA_NACIMIENTO SMALLDATETIME
	DECLARE @EDAD INT
	DECLARE @ID_RANGO_ETARIO_EMPLEADO INT
	SET @FECHA_NACIMIENTO = (SELECT fecha_nacimiento
							FROM [SQLITO].agente_inmobiliario
							WHERE agente_inmobiliario_id = @EMPLEADO)
	SET @EDAD = YEAR(GETDATE()) - YEAR(@FECHA_NACIMIENTO)

	IF @EDAD < 25
		SET @ID_RANGO_ETARIO_EMPLEADO = 1
	ELSE IF @EDAD BETWEEN  25 AND 35
		SET @ID_RANGO_ETARIO_EMPLEADO = 2
	ELSE IF @EDAD BETWEEN 35 AND 50
		SET @ID_RANGO_ETARIO_EMPLEADO = 3
	ELSE IF @EDAD > 50
		SET @ID_RANGO_ETARIO_EMPLEADO = 4

RETURN @ID_RANGO_ETARIO_EMPLEADO
END
GO

CREATE FUNCTION [SQLITO].CALCULAR_RANGO_ETARIO_INQUILINO(@INQUILINO NUMERIC(18,0))
RETURNS INT
BEGIN
	DECLARE @FECHA_NACIMIENTO SMALLDATETIME
	DECLARE @EDAD INT
	DECLARE @ID_RANGO_ETARIO_INQUILINO INT
	SET @FECHA_NACIMIENTO = (SELECT fecha_nacimiento
							FROM [SQLITO].inquilino
							WHERE inquilino_id = @INQUILINO)
	SET @EDAD = YEAR(GETDATE()) - YEAR(@FECHA_NACIMIENTO)

	IF @EDAD < 25
		SET @ID_RANGO_ETARIO_INQUILINO = 1
	ELSE IF @EDAD BETWEEN  25 AND 35
		SET @ID_RANGO_ETARIO_INQUILINO = 2
	ELSE IF @EDAD BETWEEN 35 AND 50
		SET @ID_RANGO_ETARIO_INQUILINO = 3
	ELSE IF @EDAD > 50
		SET @ID_RANGO_ETARIO_INQUILINO = 4

RETURN @ID_RANGO_ETARIO_INQUILINO
END
GO

CREATE FUNCTION [SQLITO].CALCULAR_RANGO_METROS(@INMUEBLE NUMERIC(18,0))
RETURNS INT
BEGIN
	DECLARE @SUPERFICIE numeric(18, 2)
	DECLARE @ID_RANGO_METROS INT

	SET @SUPERFICIE = (SELECT i.supericie_total
					   FROM [SQLITO].inmueble i
					   WHERE i.inmueble_id = @INMUEBLE)

	IF @SUPERFICIE < 35
		SET @ID_RANGO_METROS = 1
	ELSE IF @SUPERFICIE BETWEEN 35 AND 55
		SET @ID_RANGO_METROS = 2
	ELSE IF @SUPERFICIE BETWEEN 55 AND 75
		SET @ID_RANGO_METROS = 3
	ELSE IF @SUPERFICIE BETWEEN 75 AND 100
		SET @ID_RANGO_METROS = 4
	ELSE IF @SUPERFICIE > 100
		SET @ID_RANGO_METROS = 5

RETURN @ID_RANGO_METROS
END
GO

---------------------------
--Migraciones Dimensiones--
---------------------------

CREATE PROCEDURE [SQLITO].BI_MIGRAR_AMBIENTES
AS
BEGIN
INSERT INTO [SQLITO].BI_AMBIENTES(BI_AMBIENTES_CANTIDAD)
SELECT
	t.nombre
FROM [SQLITO].tipo_ambiente t
END
GO

CREATE PROCEDURE [SQLITO].BI_MIGRAR_TIEMPO_PUBLICACION
AS
BEGIN
    INSERT INTO BI_TIEMPO (BI_TIEMPO_ANIO, BI_TIEMPO_MES, BI_TIEMPO_CUATRIMESTRE)
    SELECT DISTINCT
        YEAR(a.fecha_publicacion) AS BI_TIEMPO_ANIO,
        MONTH(a.fecha_publicacion) AS BI_TIEMPO_MES,
        CASE
            WHEN MONTH(a.fecha_publicacion) BETWEEN 1 AND 3 THEN 1 
            WHEN MONTH(a.fecha_publicacion) BETWEEN 4 AND 6 THEN 2 
            WHEN MONTH(a.fecha_publicacion) BETWEEN 7 AND 9 THEN 3 
            WHEN MONTH(a.fecha_publicacion) BETWEEN 10 AND 12 THEN 4 
            ELSE NULL 
        END AS BI_TIEMPO_CUATRIMESTRE
    FROM [SQLITO].anuncio a;
END
GO

CREATE PROCEDURE [SQLITO].BI_MIGRAR_TIEMPO_FINALIZACION
AS
BEGIN
INSERT INTO BI_TIEMPO(BI_TIEMPO_ANIO, BI_TIEMPO_CUATRIMESTRE, BI_TIEMPO_MES)
SELECT DISTINCT
	YEAR(a.fecha_finalizacion) AS BI_TIEMPO_ANIO,
        MONTH(a.fecha_finalizacion) AS BI_TIEMPO_MES,
        CASE
            WHEN MONTH(a.fecha_finalizacion) BETWEEN 1 AND 3 THEN 1 
            WHEN MONTH(a.fecha_finalizacion) BETWEEN 4 AND 6 THEN 2 
            WHEN MONTH(a.fecha_finalizacion) BETWEEN 7 AND 9 THEN 3 
            WHEN MONTH(a.fecha_finalizacion) BETWEEN 10 AND 12 THEN 4 
			ELSE NULL 
        END AS BI_TIEMPO_CUATRIMESTRE
FROM [SQLITO].anuncio a
END
GO

CREATE PROCEDURE [SQLITO].BI_MIGRAR_TIPO_MONEDA
AS
BEGIN
INSERT INTO BI_TIPO_MONEDA
SELECT
	m.tipo_moneda
FROM [SQLITO].moneda m
END
GO

CREATE PROCEDURE [SQLITO].BI_MIGRAR_TIPO_OPERACION
AS
BEGIN
INSERT INTO BI_TIPO_OPERACION
SELECT
	t.nombre
FROM [SQLITO].tipo_operacion t
END
GO

CREATE PROCEDURE [SQLITO].BI_MIGRAR_AGENCIA
AS
BEGIN
INSERT INTO BI_AGENCIA
SELECT
	s.nombre
FROM [SQLITO].agencia s
END
GO

CREATE PROCEDURE [SQLITO].BI_MIGRAR_BARRIO
AS
BEGIN
    INSERT INTO BI_BARRIO (BI_BARRIO_ID,BI_BARRIO_NOMBRE, BI_LOCALIDAD_ID)
    SELECT
		b.barrio_id,
        b.nombre,
        l.BI_LOCALIDAD_ID
    FROM [SQLITO].barrio b
    INNER JOIN [SQLITO].BI_LOCALIDAD l ON b.localidad = l.BI_LOCALIDAD_ID;
END
GO

CREATE PROCEDURE [SQLITO].BI_MIGRAR_PROVINCIA
AS
BEGIN
INSERT INTO BI_PROVINCIA
SELECT
	p.provincia_id,
	p.nombre
FROM [SQLITO].provincia p
END
GO

CREATE PROCEDURE [SQLITO].BI_MIGRAR_LOCALIDAD
AS
BEGIN
    INSERT INTO BI_LOCALIDAD (BI_LOCALIDAD_ID,BI_LOCALIDAD_NOMBRE, BI_PROVINCIA_ID)
    SELECT
		l.localidad_id,
        l.nombre,
         p.BI_PROVINCIA_ID
    FROM [SQLITO].localidad l
    INNER JOIN [SQLITO].BI_PROVINCIA P ON l.provincia = p.BI_PROVINCIA_ID;
END
GO

CREATE PROCEDURE [SQLITO].BI_MIGRAR_RANGO_ETARIO
AS
BEGIN
	INSERT INTO BI_RANGO_ETARIO(BI_RANGO_ETARIO_RANGO)
		VALUES('<25')
	INSERT INTO BI_RANGO_ETARIO(BI_RANGO_ETARIO_RANGO)
		VALUES('25-35')
	INSERT INTO BI_RANGO_ETARIO(BI_RANGO_ETARIO_RANGO)
		VALUES('35-50')
	INSERT INTO BI_RANGO_ETARIO(BI_RANGO_ETARIO_RANGO)
		VALUES('>50')
END
GO

CREATE PROCEDURE [SQLITO].BI_MIGRAR_RANGO_METROS
AS
BEGIN
	INSERT INTO BI_RANGO_METROS(BI_RANGO_METROS_DESCRIPCION)
		VALUES('<35')
	INSERT INTO BI_RANGO_METROS(BI_RANGO_METROS_DESCRIPCION)
		VALUES('<35-55')
	INSERT INTO BI_RANGO_METROS(BI_RANGO_METROS_DESCRIPCION)
		VALUES('55-75')
	INSERT INTO BI_RANGO_METROS(BI_RANGO_METROS_DESCRIPCION)
		VALUES('75-100')
	INSERT INTO BI_RANGO_METROS(BI_RANGO_METROS_DESCRIPCION)
		VALUES('>100')			
END
GO

CREATE PROCEDURE [SQLITO].BI_MIGRAR_TIPO_INMUEBLE
AS
BEGIN
INSERT INTO [SQLITO].BI_TIPO_INMUEBLE
SELECT
	ti.nombre
FROM [SQLITO].tipo_inmueble ti
END
GO

CREATE PROCEDURE [SQLITO].BI_MIGRAR_HECHOS_ANUNCIOS
AS
BEGIN
    INSERT INTO [SQLITO].BI_HECHOS_ANUNCIO (
        BI_tiempo,
        BI_tipo_operacion,
        BI_barrio,
        BI_ambientes,
        BI_tipo_inmueble,
        --BI_rango_metros,
        -- BI_tipo_moneda,
        --BI_agencia,
        BI_rango_etario_empleado,
        BI_anuncio_fecha_publicacion,
        BI_anuncio_fecha_finalizacion,
        BI_anuncio_precio_publicado
    )
    SELECT
        t.BI_TIEMPO_ID,
        tiop.BI_TIPO_OPERACION_ID,
        (SELECT BI_BARRIO_ID 
		FROM [SQLITO].BI_BARRIO b 
		JOIN inmueble i ON i.barrio = b.BI_BARRIO_ID
		WHERE a.inmueble = i.inmueble_id),
        (SELECT BI_AMBIENTES_ID 
		FROM [SQLITO].BI_AMBIENTES amb 
		JOIN inmueble i ON i.tipo_ambiente = amb.BI_AMBIENTES_ID 
		WHERE a.inmueble = i.inmueble_id),
        (SELECT tin.BI_TIPO_INMUEBLE_ID 
		FROM [SQLITO].BI_TIPO_INMUEBLE tin 
		JOIN inmueble i ON i.tipo_inmueble = tin.BI_TIPO_INMUEBLE_ID 
		WHERE i.inmueble_id = a.inmueble),
        -- rm.BI_RANGO_METROS_ID,
        -- tm.BI_TIPO_MONEDA_ID,
        -- (SELECT ag.agencia_id 
		-- FROM agencia s 
		--JOIN agente_inmobiliario ag ON ag.agencia = s.agencia_id 
		--WHERE a.agente = ag.agente_inmobiliario_id),
        re.BI_RANGO_ETARIO_ID,
        a.fecha_publicacion,
        a.FECHA_FINALIZACION,
        a.precio_publicado_inmueble
    FROM
        [SQLITO].anuncio a
        JOIN [SQLITO].BI_TIEMPO t ON t.BI_TIEMPO_ANIO = DATEPART(YEAR, a.fecha_publicacion) AND t.BI_TIEMPO_MES = DATEPART(MONTH, a.fecha_publicacion) AND t.BI_TIEMPO_CUATRIMESTRE = DATEPART(QUARTER, a.fecha_publicacion)
        JOIN [SQLITO].BI_TIPO_OPERACION tiop ON tiop.BI_TIPO_OPERACION_ID = a.tipo_operacion
        JOIN [SQLITO].BI_RANGO_ETARIO re ON re.BI_RANGO_ETARIO_ID = [SQLITO].CALCULAR_RANGO_ETARIO_EMPLEADO(a.agente)
        JOIN [SQLITO].BI_RANGO_METROS rm ON rm.BI_RANGO_METROS_ID = [SQLITO].CALCULAR_RANGO_METROS(a.inmueble)
        JOIN [SQLITO].BI_TIPO_MONEDA tm ON tm.BI_TIPO_MONEDA_ID = a.moneda;
END;
GO

CREATE PROCEDURE [SQLITO].BI_MIGRAR_HECHOS_ALQUILER
AS
BEGIN
    INSERT INTO [SQLITO].BI_HECHOS_ALQUILER(
        BI_rango_etario_inquilino,
        BI_tiempo,
        BI_barrio,
        BI_pago_alq_fecha,
        BI_pago_alq_fecha_vencimiento,
        BI_pago_alq_importe,
        BI_alq_comision
    )
    SELECT
    re.BI_RANGO_ETARIO_ID, 
    t.BI_TIEMPO_ID,
    b.BI_BARRIO_ID,
    pa.fecha_pago,
    inq.fecha_nacimiento,  -- Corregido para obtener la fecha de nacimiento desde la tabla 'inquilino'
    pa.importe,
    a.COMISION 
FROM
    [SQLITO].alquiler a
    JOIN [SQLITO].BI_RANGO_ETARIO re ON re.BI_RANGO_ETARIO_ID = [SQLITO].CALCULAR_RANGO_ETARIO_INQUILINO(a.INQUILINO)
    JOIN [SQLITO].BI_TIEMPO t ON t.BI_TIEMPO_ANIO = DATEPART(YEAR, a.fecha_inicio) AND t.BI_TIEMPO_MES = DATEPART(MONTH, a.FECHA_INICIO) AND t.BI_TIEMPO_CUATRIMESTRE = DATEPART(QUARTER, a.FECHA_INICIO)
    JOIN [SQLITO].BI_BARRIO b ON b.BI_BARRIO_ID = (SELECT BI_BARRIO_ID FROM [SQLITO].inmueble inm JOIN [SQLITO].anuncio an ON an.INMUEBLE = inm.inmueble_id WHERE a.anuncio = an.anuncio_id)
    JOIN [SQLITO].pago_alquiler pa ON pa.alquiler = a.alquiler_id
    JOIN [SQLITO].alquiler al ON al.alquiler_id = pa.alquiler
    JOIN [SQLITO].inquilino inq ON inq.inquilino_id = al.inquilino;

END
GO


BEGIN TRANSACTION
	EXECUTE [SQLITO].BI_MIGRAR_AMBIENTES
	EXECUTE [SQLITO].BI_MIGRAR_TIEMPO_PUBLICACION
	EXECUTE [SQLITO].BI_MIGRAR_TIEMPO_FINALIZACION
	EXECUTE [SQLITO].BI_MIGRAR_TIPO_MONEDA
	EXECUTE [SQLITO].BI_MIGRAR_TIPO_OPERACION
	EXECUTE [SQLITO].BI_MIGRAR_AGENCIA
	EXECUTE [SQLITO].BI_MIGRAR_LOCALIDAD
	EXECUTE [SQLITO].BI_MIGRAR_BARRIO
	EXECUTE [SQLITO].BI_MIGRAR_PROVINCIA
	EXECUTE [SQLITO].BI_MIGRAR_RANGO_ETARIO
	EXECUTE [SQLITO].BI_MIGRAR_RANGO_METROS
	EXECUTE [SQLITO].BI_MIGRAR_TIPO_INMUEBLE
	--EXECUTE [SQLITO].BI_MIGRAR_HECHOS_ANUNCIOS
	EXECUTE [SQLITO].BI_MIGRAR_HECHOS_ALQUILER

COMMIT;

